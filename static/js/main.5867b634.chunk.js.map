{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Modal","className","App","useState","strings","string_modify","likes","likes_modify","modal","modal_modify","onClick","newArray","style","color","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,I,YCwEf,SAASA,IACP,OACE,sBAAKC,UAAU,QAAf,UACI,uCACA,qCACA,4CAKOC,MA9Ef,WAAgB,IAAD,EACkBC,mBAAS,CAAC,gBAAiB,aAAc,KAAM,iBADjE,mBACRC,EADQ,KACCC,EADD,OAGeF,mBAAS,GAHxB,mBAGRG,EAHQ,KAGDC,EAHC,OAKeJ,oBAAS,GALxB,mBAKRK,EALQ,KAKDC,EALC,KA6Bb,OACE,sBAAKR,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,2DAGF,sBAAKA,UAAU,OAAf,UACE,mCAAOG,EAAQ,GAAf,IAAoB,sBAAMM,QAvBhC,WACE,IAAIC,EAAQ,YAAMP,GAClBO,EAAS,GAAK,yBACdN,EAAcM,GAEdJ,EAAaD,EAAQ,IAkBG,0BAApB,IAA+DA,EAA/D,OACA,6DACA,0BAGF,sBAAKL,UAAU,OAAf,UACE,mCAAOG,EAAQ,GAAf,IAAoB,wBAAQM,QAnClC,WACE,IAAIC,EAAQ,YAAOP,GACnBO,EAAS,GAAK,oBACdN,EAAcM,IAgCU,4BACpB,6DACA,0BAGF,sBAAKV,UAAU,OAAf,UACE,mCAAOG,EAAQ,GAAf,OACA,6DACA,0BAGF,sBAAKH,UAAU,OAAf,UACE,qBAAIW,MAAU,CAACC,MAAQ,OAAQC,SAAU,QAAzC,oGAAqI,sBAAMJ,QAAU,WAAMD,GAAcD,IAApC,0BAArI,OACA,kDAKU,IAAVA,EAAiB,cAACR,EAAD,IAAW,SCpDrBe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5867b634.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  let [strings, string_modify] = useState(['Personal Info', 'Tech Blogs', 'CP', 'Certificates']);  //a 에는 변수, b 는 데이터를 변경하는 함수 \n  //ES6 Destructuring //스테이트는 변경되면 HTML 이 자동 재랜더링 됩니당. 개꿀띠\n  let [likes, likes_modify] = useState(0); // 위에 import 하는거 잊으면 안됨, likes_modify 는 변경용 함수, [state, state_modify_func] // re-render\n\n  let [modal, modal_modify] = useState(false);\n\n  function change_the_middle_string() {\n    var newArray = [...strings] // copy the state, deep copy    ...은 중괄호 대괄호 다 제거해 주세요 라는 문법\n    newArray[1] = 'Software Engineer';  // then modify it \n    string_modify(newArray); //then push it \n  }\n\n  function liked_handler() {\n    var newArray =[...strings] ;\n    newArray[0] = 'Thanks for the Like ! ';\n    string_modify(newArray)\n\n    likes_modify(likes + 1)\n  }\n\n  function render_modal() {\n    if (modal === true) {\n      modal_modify(false)\n    } else{\n      modal_modify(true)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <div>def Leo_Dohwee_Kim(): </div>\n      </div>\n    \n      <div className=\"list\">\n        <h3> { strings[0] } <span onClick={ liked_handler }>👍</span> {likes} </h3>\n        <p> last updated : Jan 18 2022 </p>\n        <hr/>\n      </div>\n\n      <div className=\"list\">\n        <h3> { strings[1] } <button onClick={ change_the_middle_string }> Who Am I ?</button></h3>\n        <p> last updated : Jan 18 2022 </p>\n        <hr/>\n      </div>\n\n      <div className=\"list\">\n        <h3> { strings[2] } </h3>\n        <p> last updated : Jan 18 2022 </p>\n        <hr/>\n      </div>\n\n      <div className=\"list\">\n        <h5 style = { {color : 'blue', fontSize: '20px' }}> \"Software and cathedrals are much the same – first we build them, then we pray.\" <span onClick={ ()=>{ modal_modify(!modal)}}>🙏</span> </h5>\n        <p> Sam Redwine </p>\n      </div>\n\n    \n      {\n        modal === true ? <Modal/> : null \n      }\n      \n\n    </div>\n  );\n}\n\nfunction Modal() {   //리액트의 component 라는 문법 , function 이름 짓고 \n  return (\n    <div className=\"modal\">  \n        <h2>Title</h2>\n        <p>Date</p>\n        <p>Contents</p>\n      </div>\n  );  //원하는 HTML 담은 다음에 위에가서 시밤쾅\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}